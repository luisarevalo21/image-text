{"version":3,"sources":["logo.svg","config/firebase.js","axios.js","components/Dropdown/Dropdown.js","components/Input/Input.js","container/Form/Form.js","components/Spinner/Spinner.js","components/Modal/Modal.js","container/Home/Home.js","container/Login/Login.js","container/Logout/Logout.js","components/PopUpComponent/PopUpComponent.js","container/Dashboard/Dashboard.js","components/Navbar/Navbar.js","ProtectedRoute.js","App.js","serviceWorker.js","index.js","components/Input/Input.module.css","components/Navbar/Navbar.module.css","container/Dashboard/Dashboard.module.css","components/Dropdown/Dropdown.module.css","container/Home/Home.module.css","container/Login/Login.module.css","container/Form/Form.module.css","assets/images/myphoto.jpg","container/Logout/Logout.module.css"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","GoogleAuthProvider","instance","axios","create","baseURL","customStyles","option","provided","state","control","base","height","minHeight","cursor","backgroundColor","dropDown","props","className","classes","Layout","Label","header","Dropdown","options","value","selectedOption","onChange","changed","placeholder","defaultValue","styles","input","inputClasses","Input","invalid","touched","push","Invalid","type","title","join","min","max","attendanceOptions","map","element","key","checked","Span","Radio","passFromFriendOptions","TextArea","gyms","name","listName","Form","formData","validation","required","valid","trainerName","level","maxLength","teamName","gymName","selectedGym","filter","undefined","dateOfRaid","date","timeOfRaid","time","attendance","passFromFriend","lateGroup","comments","formIsValid","selectedAttendance","handleSubmit","event","a","preventDefault","submissionTime","Date","toLocaleString","split","toLocaleTimeString","console","log","data","url","URL","Object","keys","forEach","searchParams","append","fetch","method","response","json","result","JSON","stringify","error","checkValidity","rules","length","isValid","trim","handleChange","setState","target","handleInputChange","copyData","inputNames","this","formElement","id","config","e","teamOptions","onSubmit","disabled","Button","Component","spinner","Spinner","animation","role","modal","Modal","show","onHide","hide","centered","Home","image","exDateInformation","activeExGymOptions","selectedGymOption","selectedTeam","label","loading","fetchActiveExGyms","get","then","city","imageUrl","catch","exImage","form","src","Image","Header","Login","uiConfig","signInFlow","signInOptions","auth","PROVIDER_ID","signInSuccessUrl","location","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","additionalUserInfo","isNewUser","newUser","user","displayName","email","uid","patch","signInSuccess","firebaseAuth","logout","onClick","Logout","popUpComponent","progress","isOpen","posting","color","completed","months","Dashboard","file","files","fetchTextFromGoogle","array","body","requests","features","source","imageUri","process","headers","Accept","responseJson","responses","fullTextAnnotation","text","startIndex","values","indexOf","myObject","dateArray","finalDateArray","i","monthNumber","dayOfRaid","currentYear","getFullYear","currentUser","getIdToken","idToken","message","handleClick","storage","ref","put","on","snapshot","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","loadModule","PopUpComponent","accept","navbar","isAdmin","authenticated","to","NavLink","Navbar","collapseOnSelect","expand","variant","Toggle","aria-controls","Collapse","Nav","ProtectedRoute","component","loggedin","rest","render","App","signOut","updateUser","onAuthStateChanged","params","token","path","exact","DashBoard","Boolean","window","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.100d5fed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// Your web app's Firebase configuration\n\nimport * as firebase from \"firebase\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAVwBf0L1ArVNltF3_lUMmOQx8b7mljHHM\",\n  authDomain: \"image-text-259801.firebaseapp.com\",\n  databaseURL: \"https://image-text-259801.firebaseio.com\",\n  projectId: \"image-text-259801\",\n  storageBucket: \"image-text-259801.appspot.com\",\n  messagingSenderId: \"703355334067\",\n  appId: \"1:703355334067:web:8f6bf6f048bfe03ee36fc6\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const provider = new firebase.auth.GoogleAuthProvider();\n\nexport default firebase;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://image-text-259801.firebaseio.com/\"\n});\n\nexport default instance;\n","import React, { Component } from \"react\";\nimport axios from \"../../axios\";\n// import Dropdown from \"react-dropdown\";\n// import 'semantic-ui-css/semantic.min.css'\n// import \"semantic-ui-css/semantic.min.css\";\nimport Select from \"react-select\";\nimport classes from \"./Dropdown.module.css\";\n// class DropDown extends Component {\n//   state = {\n//     activeExGyms: []\n//   };\n//   //   componentDidMount() {\n//   //     axios\n//   //       .get(\"/currentExRaids.json\")\n//   //       .then(response => {\n//   //         console.log(\"the response is\", response.data);\n//   //       })\n//   //       .catch(error => console.log(error));\n//   //   }\n\nconst customStyles = {\n  option: (provided, state, height = \"60px\") => ({\n    ...provided\n    // fontWeight: state.isDisabled ? \"bold\" : null,\n    // color: state.isDisabled ? \"black\" : null,\n    // height: height\n  }),\n  control: base => ({\n    ...base,\n    height: 35,\n    minHeight: 50,\n    cursor: \"pointer\",\n    backgroundColor: \"#d1d1d1\"\n  })\n  //   singleValue: (provided, state) => {\n  //     const opacity = state.isDisabled ? 1 : 0.5;\n\n  //     return { ...provided, opacity };\n  //   }\n};\n\nconst dropDown = props => {\n  return (\n    <div className={classes.Layout}>\n      <label className={classes.Label}>{props.header}</label>\n      <Select\n        className={classes.Dropdown}\n        options={props.options}\n        value={props.selectedOption}\n        onChange={props.changed}\n        placeholder={props.defaultValue}\n        styles={customStyles}\n        // value={props.value}\n      />\n    </div>\n  );\n};\n\nexport default dropDown;\n","import React from \"react\";\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\nimport classes from \"./Input.module.css\";\nconst input = props => {\n  const inputClasses = [classes.Input];\n\n  if (props.invalid && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n  let input = null;\n  switch (props.type) {\n    case \"number\":\n      input = (\n        <div className={classes.Layout}>\n          <label className={classes.Label}>{props.title}</label>\n          <input\n            className={inputClasses.join(\" \")}\n            type=\"number\"\n            placeholder={props.placeholder}\n            min=\"1\"\n            max=\"40\"\n            onChange={props.changed}\n          />\n        </div>\n      );\n      break;\n    case \"text\":\n      input = (\n        <div className={classes.Layout}>\n          <label className={classes.Label}>{props.title}</label>\n          <input\n            className={inputClasses.join(\" \")}\n            type=\"text\"\n            placeholder={props.placeholder}\n            onChange={props.changed}\n          />\n        </div>\n      );\n      break;\n    case \"dropdown\":\n      input = (\n        <div className={classes.Layout}>\n          <label className={classes.Label}>{props.title}</label>\n          <Dropdown\n            className={classes.Dropdown}\n            options={props.options}\n            //   options={this.state.options}\n            value={props.value}\n            changed={props.changed}\n            defaultValue={props.placeholder}\n          />\n        </div>\n      );\n      break;\n    case \"radio\":\n      input = props.attendanceOptions.map(element => (\n        <div key={element}>\n          <label key={element} className={classes.Label}>\n            <input\n              // className={classes.Label}\n              // className={inputClasses.join(\" \")}\n              type=\"radio\"\n              value={element}\n              checked={props.checked === element}\n              onChange={props.changed}\n            />\n\n            <span className={classes.Span}>{element}</span>\n          </label>\n        </div>\n      ));\n      input = (\n        <div className={classes.Radio}>\n          <label className={classes.Label}>{props.title}</label>\n          {input}\n        </div>\n      );\n\n      break;\n\n    case \"radio2\":\n      input = props.passFromFriendOptions.map(element => (\n        <div key={element}>\n          <label>\n            <input\n              // className={classes.Label}\n              // className={inputClasses.join(\" \")}\n              type=\"radio\"\n              value={element}\n              checked={props.checked === element}\n              onChange={props.changed}\n            />\n\n            <span className={classes.Span}>{element}</span>\n          </label>\n        </div>\n      ));\n      input = (\n        <div className={classes.Radio}>\n          <label className={classes.Label}>{props.title}</label>\n          {input}\n        </div>\n      );\n\n      break;\n\n    case \"textarea\":\n      input = (\n        <div className={classes.Layout}>\n          <label className={classes.Label}>{props.title}</label>\n          <textarea\n            placeholder=\"your answer\"\n            onChange={props.changed}\n            className={classes.TextArea}\n          />\n        </div>\n      );\n      break;\n      {\n        /* </div> */\n      }\n\n      // <label>\n      //   <input\n      //     type=\"radio\"\n      //     value=\"Yes, I will be there.\"\n      //     checked={this.state.selectedAttendance === \"Yes, I will be there.\"}\n      //     onChange={this.handleChange}\n      //   />\n      //   Yes, I will be there.\n      // </label>;\n      //   input = (\n      //     <input\n      //       className={inputClasses.join(\" \")}\n      //       type=\"radio\"\n      //       value={props.value}\n      //       // placeholder={props.placeholder}\n      //       onChange={props.changed}\n      //     />\n      //   );\n      //   break;\n\n      {\n        /* <label>\n            <input\n              className={inputClasses.join(\" \")}\n              type=\"radio\"\n              value={element}\n              checked={props.selectedAttendance === element}\n              onChange={props.changed}\n            >\n              element\n            </input>\n          </label> */\n      }\n  }\n\n  return <> {input} </>;\n};\n\nexport default input;\n","import React, { Component } from \"react\";\n\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\nimport classes from \"./Form.module.css\";\nimport Input from \"../../components/Input/Input\";\nimport axios from \"axios\";\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\nconst gyms = [\n  {\n    name: \"Can You Hear There (Woodfield)\",\n    listName: \"Can You Hear There, Hercules (Lupine Road, Park)\"\n  },\n  {\n    \"Country Club Vist Park Dedication Plaque\":\n      \"Country Club Vist Park Dedication Plaque, Richmond\"\n  },\n  {\n    \"Ever Burning Flame\": \"Ever Burning Flame, Pinole (Fernandez Park)\"\n  },\n  {\n    \"Fountain of the Bells\": \"Fountain of the Bells, San Pablo\"\n  },\n  {\n    name: \"Hazel Downer Thorton Memorial Grove (Dog Park)\",\n    listName:\n      \"Hazel Downer Thorton Memorial Grove, Pinole (Pinole Valley dog park)\"\n  },\n  {\n    name: \"Lamoine (Cheese) Park\",\n    listName: \"Lamoine Park, Richmond (Cheese Park)\"\n  },\n  { name: \"Lefty Gomez\", listName: \"Lefty Gomez Plaque, Rodeo\" },\n  { name: \"Nina Zeitler\", listName: \"Nina Zeitler\" },\n  {\n    name: \"Pinole Point Business Park Fountain A\",\n    listName: \"Pt. Pinole Business Park Fountain, Richmond\"\n  },\n  {\n    name: \"Pinole Rotary Club (Louis Francis)\",\n    listName: \"Pinole Rotary Club, Pinole (Marlesta Rd)\"\n  },\n  { name: \"Pinole Valley Park\", listName: \"Pinole Valley Park, Pinole\" },\n  {\n    name: \"Playground (Refugio)\",\n    listName: \"Playground, Hercules (Refugio Park)\"\n  },\n  {\n    name: \"Starbucks (Richmond Parkway)\",\n    listName: \"Starbucks, Richmond Parkway location\"\n  },\n  {\n    name: \"Starbucks (San Pablo Dam Road)\",\n    listName: \"Starbucks, San Pablo Dam Rd. location (El Sob/San Pablo)\"\n  }\n];\nclass Form extends Component {\n  state = {\n    // options: [\n    //   { value: \"Mystic\", label: \"Mystic\" },\n    //   { value: \"Instinct\", label: \"Instinct\" },\n    //   { value: \"Valor\", label: \"Valor\" }\n    // ],\n    // selectedValue: null\n\n    formData: {\n      name: {\n        value: \"\",\n        type: \"text\",\n        title: \"Your name\",\n        validation: {\n          required: true\n        },\n        placeholder: \"name\",\n        valid: false,\n        touched: false\n      },\n      trainerName: {\n        value: \"\",\n        type: \"text\",\n        title: \"Pokémon Trainer Name\",\n        validation: {\n          required: true\n        },\n        placeholder: \"Pokémon Trainer Name\",\n        valid: false,\n        touched: false\n      },\n      level: {\n        value: \"\",\n        type: \"number\",\n        title: \"Level #\",\n        validation: {\n          required: true,\n          maxLength: 2\n        },\n        placeholder: \"Level #\",\n        valid: false,\n        touched: false\n      },\n      teamName: {\n        value: \"\",\n        title: \"Team\",\n        type: \"dropdown\",\n        validation: {},\n        placeholder: \"Select a team...\",\n        valid: false\n      },\n\n      // attendance: {\n      //   value: \"\",\n      //   type: \"radio\",\n      //   validation: {}\n      // },\n\n      gymName: {\n        value: gyms\n          .map(element => element[this.props.selectedGym.value])\n          .filter(element => element !== undefined)[0],\n        validation: {},\n        valid: true\n      },\n      dateOfRaid: {\n        value: this.props.selectedGym.date,\n        validation: {},\n        valid: true\n      },\n      timeOfRaid: {\n        value: this.props.selectedGym.time,\n        validation: {},\n        valid: true\n      },\n      attendance: {\n        type: \"radio\",\n        value: \"\",\n        checked: \"\",\n        title: \"Will you be attending?\",\n        attendanceOptions: [\n          \"Yes, I will be there.\",\n          \"Yes, I will be there. My friend will play for me (enter their name in the comment)\",\n          \"I need someone to play for me (add your telegram name in the comments so an admin can contact you)\",\n          \"No\"\n        ],\n        validation: {}\n      },\n      passFromFriend: {\n        type: \"radio2\",\n        value: \"\",\n        title: \"Is your invite from a friend?\",\n        checked: \"\",\n        passFromFriendOptions: [\"Yes\", \"No\"],\n        validation: {},\n        valid: false\n      },\n      lateGroup: {\n        type: \"radio2\",\n        value: \"\",\n        title: \"Would you like to attend the late group?\",\n        checked: \"\",\n        passFromFriendOptions: [\"Yes\", \"No\"],\n        validation: {},\n        valid: false\n      },\n      comments: {\n        type: \"text\",\n        value: \"\",\n        title: \"Comments\",\n        validation: {},\n        valid: true,\n        placeholder: \"comments\"\n      }\n    },\n    formIsValid: false,\n    selectedAttendance: \"\"\n    // attendanceOptions: [\n    //   \"Yes, I will be there.\",\n    //   \"Yes, I will be there. My friend will play for me (enter their name in the comment)\"\n    // ]\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { formData } = this.state;\n    const submissionTime =\n      new Date().toLocaleString().split(\",\")[0] +\n      \" \" +\n      new Date().toLocaleTimeString(\"en-GB\");\n    console.log(submissionTime);\n    const data = {};\n    data.submissionTime = submissionTime;\n    const url = new URL(\n      \"https://script.google.com/macros/s/AKfycby8z0GQH8jJjqJW-NUjTRxjCVhdlG81K2akTgiLhOsrNxPyPn0/exec\"\n    );\n\n    for (let element in formData) {\n      data[element] = formData[element].value;\n    }\n    console.log(data);\n    // data.name = formData.name.value;\n    // data.level = formData.level.value;\n    // data.trainerName = formData.trainerName.value;\n    // console.log(\"the data is\", data);\n    // const finalData = JSON.stringify(data);\n    // console.log(\"the data is\", finalData);\n    Object.keys(data).forEach(element =>\n      url.searchParams.append(element, data[element])\n    );\n    try {\n      const response = await fetch(url, {\n        method: \"GET\"\n      });\n      const result = await response.json();\n      console.log(\"Success:\", JSON.stringify(result));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    //     const result = await response.json();\n    //   console.log('Success:', JSON.stringify(result));\n    // } catch (error) {\n    //   console.error('Error:', error);\n    // }\n    // axios\n    //   .get(\n    //     \"https://script.google.com/macros/s/AKfycby8z0GQH8jJjqJW-NUjTRxjCVhdlG81K2akTgiLhOsrNxPyPn0/exec.json\",\n    //     data\n    //   )\n    //   .then(response => console.log(response))\n    //   .catch(error => console.log(error));\n    console.log(\"submisison is triggered\");\n  };\n\n  checkValidity = (value, rules) => {\n    console.log(\"the ruels are\", rules);\n    console.log(\"tehv value s\", value.length);\n    let isValid = true;\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= 2 && isValid;\n    }\n\n    console.log(\"IS VALID IS\", isValid);\n    return isValid;\n  };\n\n  handleChange = event => {\n    this.setState({ selectedAttendance: event.target.value });\n  };\n\n  handleInputChange = (event, type) => {\n    const copyData = { ...this.state.formData };\n\n    // if (type === \"level\") {\n    //   //   event.target.value.length < 2;\n    // }\n\n    if (type === \"teamName\") {\n      copyData[type].value = event.value;\n    } else if (\n      type === \"attendance\" ||\n      type === \"passFromFriend\" ||\n      type === \"lateGroup\"\n    ) {\n      copyData[type].value = event.target.value;\n      copyData[type].checked = event.target.value;\n    } else {\n      copyData[type].value = event.target.value;\n    }\n\n    copyData[type].touched = true;\n    console.log(\"copy data is\", copyData[type].validation);\n    copyData[type].valid = this.checkValidity(\n      copyData[type].value,\n      copyData[type].validation\n    );\n\n    let formIsValid = true;\n    for (let inputNames in copyData) {\n      formIsValid = copyData[inputNames].valid && formIsValid;\n    }\n    this.setState({ formData: copyData, formIsValid });\n  };\n\n  render() {\n    console.log(\"this.state\", this.state);\n\n    const formElement = [];\n\n    for (let element in this.state.formData) {\n      formElement.push({ id: element, config: this.state.formData[element] });\n    }\n\n    // const copy = { ...this.state.formData };\n    let input = formElement.map(element => {\n      return (\n        <Input\n          type={element.config.type}\n          key={element.id}\n          placeholder={element.config.placeholder}\n          changed={e => this.handleInputChange(e, element.id)}\n          options={this.props.teamOptions}\n          invalid={!element.config.valid}\n          value={this.props.value}\n          touched={element.config.touched}\n          attendanceOptions={element.config.attendanceOptions}\n          checked={element.config.checked}\n          passFromFriendOptions={element.config.passFromFriendOptions}\n          title={element.config.title}\n        />\n      );\n    });\n\n    // console.log(this.props.selectedGym);\n    // const name = this.props.selectedGym;\n    // console.log(\n    //   gyms\n    //     .map(element => element[this.props.selectedGym])\n    //     .filter(element => element !== undefined)\n    // );\n\n    // console.log(\n    //   new Date().toLocaleString().split(\",\")[0] +\n    //     \"\" +\n    //     new Date().toLocaleTimeString(\"en-GB\")\n    // );\n    // console.log(\n    //   gyms\n    //     .map(element => element[name])\n    //     .reduce(\n    //       (accumulator, currentValue, currentIndex, array) =>\n    //         (accumulator = currentValue !== undefined)\n    //     ),\n    //   {}\n    // );\n    // const time = new Date();\n    // time.format(\"m/dd/yy  h:MM:ss TT\")\n    // dateForm(time, \"m/dd/yy  h:MM:ss TT\");\n    // console.log(new Date().toLocaleString(\"en-GB\").replace(/,/g, \"\"));\n    // let input = null;\n    // for (let element in this.state.formData) {\n    // }\n    return (\n      <form onSubmit={this.handleSubmit} className={classes.Form}>\n        {input}\n        <button disabled={!this.state.formIsValid} className={classes.Button}>\n          Submit\n        </button>\n\n        {/* <div> */}\n        {/* <input\n          type=\"radio\"\n          value=\"Yes, I will be there.\"\n          onChange={e => this.handleInputChange(e, \"attendance\")}\n        />\n        Yes, I will be there.\n        <input\n          type=\"radio\"\n          value=\"My friend will play for me (enter their name in the comment)\"\n          onChange={e => this.handleInputChange(e, \"attendance\")}\n        />\n        Yes, I will be there. My friend will play for me (enter their name in\n        the comment) */}\n\n        {/* <label>\n          <input\n            type=\"radio\"\n            value=\"Yes, I will be there.\"\n            checked={this.state.selectedAttendance === \"Yes, I will be there.\"}\n            onChange={this.handleChange}\n          />\n          Yes, I will be there.\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"Yes, I will be there. My friend will play for me (enter their name in the comment)\"\n            checked={\n              this.state.selectedAttendance ===\n              \"Yes, I will be there. My friend will play for me (enter their name in the comment)\"\n            }\n            onChange={this.handleChange}\n          />\n          Yes, I will be there. My friend will play for me (enter their name in\n          the comment)\n        </label> */}\n        {/* </div> */}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n{\n  /* <Dropdown\n          options={this.props.teamOptions}\n          //   options={this.state.options}\n          value={this.props.value}\n          changed={this.props.changed}\n          defaultValue=\"Select a team...\"\n        /> */\n}\n{\n  /* <input\n          type=\"text\"\n          placeholder=\"name\"\n          onChange={e => this.handleInputChange(e, \"name\")}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"trainer name\"\n          onChange={e => this.handleInputChange(e, \"trainerName\")}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"level\"\n          min=\"1\"\n          max=\"40\"\n          onChange={e => this.handleInputChange(e, \"level\")}\n        /> */\n}\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nconst spinner = props => (\n  <Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </Spinner>\n);\n\nexport default spinner;\n","import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst modal = props => (\n  <Modal show={props.show} onHide={props.hide} centered>\n    <Spinner />\n  </Modal>\n);\n\nexport default modal;\n","import React, { Component } from \"react\";\nimport vision from \"react-cloud-vision-api\";\nimport firebase from \"../../config/firebase\";\nimport image from \"../../assets/images/myphoto.jpg\";\nimport FileBase64 from \"react-file-base64\";\nimport axios from \"../../axios\";\nimport DropDown from \"../../components/Dropdown/Dropdown\";\nimport classes from \"./Home.module.css\";\nimport Form from \"../../container/Form/Form\";\nimport Modal from \"../../components/Modal/Modal\";\n// import Spinner from \"../../components/Spinner/Spinner\";\n// import firebase from \"../../config/firebase\";\n// const months = [\n//   \"January\",\n//   \"February\",\n//   \"March\",\n//   \"April\",\n//   \"May\",\n//   \"June\",\n//   \"July\",\n//   \"August\",\n//   \"September\",\n//   \"October\",\n//   \"November\",\n//   \"December\"\n// ];\nclass Home extends Component {\n  state = {\n    response: null,\n    image: image,\n    exDateInformation: null,\n    activeExGymOptions: [],\n    selectedGymOption: null,\n    selectedTeam: null,\n    teamOptions: [\n      { value: \"Mystic\", label: \"Mystic\" },\n      { value: \"Instinct\", label: \"Instinct\" },\n      { value: \"Valor\", label: \"Valor\" }\n    ],\n    loading: false\n    // selectedValue: null\n  };\n\n  //   const vision = require('react-cloud-vision-api')\n  // vision.init({auth: 'YOUR_API_KEY'})\n  // const req = new vision.Request({\n  //   image: new vision.Image({\n  //     base64: base64Img,\n  //   }),\n  //   features: [\n  //     new vision.Feature('TEXT_DETECTION', 4),\n  //     new vision.Feature('LABEL_DETECTION', 10),\n  //   ]\n  // })\n\n  //   handleClick = async () => {\n  //     // const req = new vision.Request({\n  //     //   image: new vision.Image({\n  //     //     base64: image\n  //     //   }),\n  //     //   features: [\n  //     //     new vision.Feature(\"TEXT_DETECTION\")\n  //     //     // new vision.Feature(\"LABEL_DETECTION\", 10)\n  //     //   ]\n  //     // });\n  //     // console.log(\"req is\", req);\n  //     let array = [];\n  //     const { url } = this.state;\n  //     let body = JSON.stringify({\n  //       requests: [\n  //         {\n  //           features: [\n  //             // { type: \"LABEL_DETECTION\", maxResults: 10 },\n  //             // { type: \"LANDMARK_DETECTION\", maxResults: 5 },\n  //             // { type: \"FACE_DETECTION\", maxResults: 5 },\n  //             // { type: \"LOGO_DETECTION\", maxResults: 5 },\n  //             { type: \"DOCUMENT_TEXT_DETECTION\" }\n  //             // { type: \"DOCUMENT_TEXT_DETECTION\", maxResults: 5 },\n  //             // { type: \"SAFE_SEARCH_DETECTION\", maxResults: 5 },\n  //             // { type: \"IMAGE_PROPERTIES\", maxResults: 5 },\n  //             // { type: \"CROP_HINTS\", maxResults: 5 },\n  //             // { type: \"WEB_DETECTION\", maxResults: 5 }\n  //           ],\n  //           image: {\n  //             source: {\n  //               imageUri: url\n  //             }\n  //           }\n  //         }\n  //       ]\n  //     });\n  //     let response = await fetch(\n  //       \"https://vision.googleapis.com/v1/images:annotate?key=AIzaSyDC3ApKxjcjwBVdyVyFKE7N3VOeyEMjY34\",\n  //       {\n  //         headers: {\n  //           Accept: \"application/json\",\n  //           \"Content-Type\": \"application/json\"\n  //         },\n  //         method: \"POST\",\n  //         body: body\n  //       }\n  //     );\n  //     let responseJson = await response.json();\n  //     console.log(responseJson);\n\n  //     console.log(responseJson.responses[0].fullTextAnnotation.text);\n\n  //     array = responseJson.responses[0].fullTextAnnotation.text.split(\"\\n\");\n\n  //     const startIndex = Object.values(array).indexOf(\"INVITATION\") + 1;\n  //     const myObject = {};\n\n  //     const dateArray = array[startIndex].split(\" \");\n  //     let finalDateArray = [];\n  //     for (let i = 0; i < dateArray.length; i++) {\n  //       if (dateArray[i] === \"PM\") {\n  //         finalDateArray.push(dateArray[i]);\n  //         break;\n  //       }\n  //       finalDateArray.push(dateArray[i]);\n  //     }\n\n  //     console.log(finalDateArray);\n\n  //     const gymName = array[startIndex + 1];\n  //     const city = array[startIndex + 2].split(\",\")[0];\n  //     console.log(\"the gym name is\", city);\n\n  //     myObject.date = finalDateArray;\n  //     myObject.gymName = gymName;\n  //     myObject.city = city;\n\n  //     axios\n  //       .post(\"/currentExRaids.json\", myObject)\n  //       .then(response => console.log(response))\n  //       .catch(error => console.log(error));\n  //     this.setState({\n  //       exDateInformation: myObject\n  //     });\n  //   };\n\n  //   getFiles = image => {\n  //     this.setState({ completedFile: image });\n  //   };\n\n  //   convert = () => {\n  //     storage\n  //       .child(\"IMG_9321.PNG\")\n  //       .getDownloadURL()\n  //       .then(url => this.setState({ url }));\n\n  //     // base64.base64(image, function(err, data) {\n  //     //   console.log(\"the dataiss \", data);\n  //     // });\n  //   };\n  //   handleImageChange = e => {\n  //     e.preventDefault();\n  //     let file = e.target.files[0];\n  //     let reader = new FileReader();\n  //     reader.readAsDataURL(file);\n  //     reader.onloadend = () => {\n  //       this.setState({\n  //         file: file,\n  //         base64: reader.result\n  //       });\n  //     };\n  //   };\n\n  //   componentDidUpdate(state) {\n  //     console.log(\"the state ism\", state);\n  //     console.log(\"the current state is\", this.state);\n  //     if (state !== this.state) {\n  //       //   this.fetchActiveExGyms();\n  //     }\n  //   }\n\n  fetchActiveExGyms = () => {\n    this.setState({ loading: true });\n    // if (firebase.auth().currentUser)\n    //   firebase\n    //     .auth()\n    //     .currentUser.getIdToken(true)\n    //     .then(idToken => {\n\n    // const user = firebase.auth().currentUser;\n    // console.log(\"CURRENT USER IS, \", user);\n\n    // if (user) {\n    //   user.getIdToken(true).then(idToken => {\n    //     axios\n    //       .get(\"/users.json?auth=\" + idToken + \"/uid=\" + user.uid)\n    //       .then(response => console.log(response))\n    //       .catch(error => console.log(error));\n    //   });\n    // }\n\n    axios\n      .get(\"/currentExRaids.json\")\n      .then(response => {\n        console.log(\"the response is\", response.data);\n\n        const activeExGymOptions = Object.keys(response.data).map(element => {\n          return {\n            id: element,\n            value: response.data[element].gymName,\n            label: response.data[element].gymName,\n            date: response.data[element].date,\n            time: response.data[element].time,\n            city: response.data[element].city,\n            imageUrl: response.data[element].imageUrl\n          };\n        });\n\n        this.setState({ activeExGymOptions, loading: false });\n      })\n      .catch(error => console.log(error));\n    //});\n\n    //   .then(error => console.log(error));\n    // }).then(error=>console.log(error)\n\n    // const currentUser = firebase.auth().currentUser;\n    // if (currentUser)\n    // currentUser\n    //   .getIdToken(true)\n    //   .then(idToken => {\n    //     console.log(\"the id token is\", idToken);\n    //     axios.get(\"/currentExRaids.json?auth=\" + idToken).then(response => {\n    //       console.log(\"the response is\", response.data);\n\n    //       const activeExGymOptions = Object.keys(response.data).map(element => {\n    //         return {\n    //           id: element,\n    //           value: response.data[element].gymName,\n    //           label: response.data[element].gymName,\n    //           date: response.data[element].date,\n    //           city: response.data[element].city,\n    //           imageUrl: response.data[element].imageUrl\n    //         };\n    //       });\n    //       console.log(\"the options are\", activeExGymOptions);\n    //       this.setState({ activeExGymOptions });\n    //     });\n    //   this.setState({ options: response.data });\n  };\n  componentDidMount() {\n    this.fetchActiveExGyms();\n    // const currentUser = firebase.auth().currentUser;\n    // this.props.user(currentUser);\n    // console.log(currentUser);\n    // if (currentUser)\n    //   currentUser\n    //     .getIdToken(true)\n    //     .then(idToken => {\n    //       axios.get(\"/currentExRaids.json?auth=\" + idToken).then(response => {\n    //         console.log(\"the response is\", response.data);\n    //         const activeExGymOptions = Object.keys(response.data).map(\n    //           element => {\n    //             return {\n    //               id: element,\n    //               value: response.data[element].gymName,\n    //               label: response.data[element].gymName,\n    //               date: response.data[element].date,\n    //               city: response.data[element].city,\n    //               imageUrl: response.data[element].imageUrl\n    //             };\n    //           }\n    //         );\n    //         console.log(\"the options are\", activeExGymOptions);\n    //         this.setState({ activeExGymOptions });\n    //       });\n    //       // this.setState({ options: response.data });\n    //     })\n    //     .catch(error => console.log(error));\n  }\n  // this.handleSubmit()\n\n  handleChange = (event, selectedOption) => {\n    console.log(\"the name is\", event);\n    console.log(\"the name is\", selectedOption);\n\n    this.setState({ [selectedOption]: event });\n  };\n  render() {\n    // console.log(\"this.state\", this.state.googleResponse);\n    // const { exDateInformation } = this.state;\n    let spinner = null;\n    const { selectedGymOption } = this.state;\n    let exImage = null;\n    let form = null;\n    if (selectedGymOption) {\n      exImage = (\n        <img src={selectedGymOption.imageUrl} className={classes.Image} />\n      );\n      form = (\n        <Form\n          teamOptions={this.state.teamOptions}\n          changed={e => this.handleChange(e, \"selectedTeam\")}\n          value={this.state.selectedTeam}\n          selectedGym={this.state.selectedGymOption}\n        />\n      );\n    }\n\n    if (this.state.loading) {\n      spinner = <Modal show={this.state.loading} />;\n    }\n\n    // let module = null;\n    // if (true) {\n    //   module = <PopUpComponent posting={true} />;\n    // }\n\n    return (\n      <div>\n        {spinner}\n        <h1 className={classes.Header}>Ex Raid Sign Up</h1>\n\n        <div className={classes.Dropdown}>\n          <DropDown\n            options={this.state.activeExGymOptions}\n            value={this.state.selectedGymOption}\n            changed={e => this.handleChange(e, \"selectedGymOption\")}\n            header=\"Active Ex Raids\"\n            //   value={this.state.selectedValue}\n          />\n        </div>\n        {exImage}\n        {form}\n        {/* <Test /> */}\n\n        {/* {module} */}\n      </div>\n    );\n  }\n}\n{\n  /* <FileBase64 multiple={false} onDone={() => this.getFiles()} />) */\n}\n{\n  /* <input type=\"file\" onChange={this.handleImageChange} />\n        <button onClick={this.handleClick}> submit</button>\n        <button onClick={this.convert}>convert </button> */\n}\n\nexport default Home;\n// if (selectedValue) {\n//   console.log(selectedValue.imageUrl);\n//   exImage = <img src={selectedValue.imageUrl} />;\n// }\n// const months = [\n//   \"January\",\n//   \"February\",\n//   \"March\",\n//   \"April\",\n//   \"May\",\n//   \"June\",\n//   \"July\",\n//   \"August\",\n//   \"September\",\n//   \"October\",\n//   \"November\",\n//   \"December\"\n// ];\n// const { googleResponse } = this.state;\n// let array = [];\n// if (googleResponse) {\n//   console.log(googleResponse.responses[0].fullTextAnnotation.text);\n\n//   array = googleResponse.responses[0].fullTextAnnotation.text.split(\"\\n\");\n\n//   const startIndex = Object.values(array).indexOf(\"INVITATION\") + 1;\n//   const myObject = {};\n\n//   const dateArray = array[startIndex].split(\" \");\n//   let finalDateArray = [];\n//   for (let i = 0; i < dateArray.length; i++) {\n//     if (dateArray[i] === \"PM\") {\n//       finalDateArray.push(dateArray[i]);\n//       break;\n//     }\n//     finalDateArray.push(dateArray[i]);\n//   }\n\n//   console.log(finalDateArray);\n\n//   const gymName = array[startIndex + 1];\n//   const city = array[startIndex + 2].split(\",\")[0];\n//   console.log(\"the gym name is\", city);\n\n//   myObject.date = finalDateArray;\n//   myObject.gymName = gymName;\n//   myObject.city = city;\n//   monthInformation.map(element => console.log(element));\n// console.log(\"the array is\", array[index]);\n\n//   const myArray = myObject[0].split(\" \");\n//   console.log(\"my array is \", myObject);\n//   console.log(Object.values(array).indexOf(\"INVITATION\"));\n\n//   for (let element in array) {\n//     console.log(array[element]);\n//     //   if(array[element].indexof)\n//   }\n//   const copy = [...array];\n//   console.log(typeof copy);\n//}\n// if (googleResponse) {\n//   let month = \"\";\n//   let day = \"\";\n//   let time = \"\";\n\n//   const values = Object.values(googleResponse.responses[0])[0];\n\n//   for (let index = 6; index < 19; index++) {\n//     console.log(values[index]);\n//     if (months.includes(values[index].description)) {\n//       month = values[index].description;\n//     }\n//     if (!isNaN(values[index].description)) {\n//       day = values[index].description;\n//     }\n//   }\n\n//   console.log(\"month and day are\", month, day);\n//   Object.values(values).map(element => {\n//     if (months.includes(element.description)) {\n//       month = element.description;\n//     }\n//   });\n//   console.log(\"the date is\", month);\n\n//   console.log(\n//     Object.values(googleResponse.responses[0])[0].map(element => element)\n//   );\n// .map(element => console.log(\"the elmenet is\", element[0].description));\n\n// console.log(googleResponse.responses[0].textAnnotations[6].description);\n// googleResponse[element].map(element =>\n//   console.log(\n//     element.textAnnotations.map(el => console.log(\"el is\", el))\n//   )\n// );\n","import React, { Component } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"../../config/firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"../../axios\";\nimport classes from \"./Login.module.css\";\nclass Login extends Component {\n  state = {};\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n    signInSuccessUrl: this.props.location,\n\n    callbacks: {\n      signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n        console.log(\"authResult\", authResult.additionalUserInfo.isNewUser);\n\n        if (authResult.additionalUserInfo.isNewUser) {\n          const newUser = {\n            name: authResult.user.displayName,\n            email: authResult.user.email,\n            uid: authResult.user.uid\n          };\n          axios\n            .patch(\"/users.json\", { [newUser.uid]: newUser })\n            .then(response => console.log(response))\n            .catch(error => console.log(\"error occrued\", error));\n        }\n\n        return true;\n        // User successfully signed in.\n        // Return type determines whether we continue the redirect automatically\n        // or whether we leave that to developer to handle.\n        // return true;\n      }\n    }\n  };\n\n  signInSuccess = () => {\n    console.log(\"theuser is\");\n    // return <Redirect to=\"/\" />;\n  };\n  render() {\n    // console.log(\"process \", this.props.history.push());\n    return (\n      <div className={classes.Login}>\n        <h3 className={classes.Header}> Login Page</h3>\n\n        <div>\n          <h4 className={classes.Header}>Sign Up with google</h4>\n          <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport classes from \"./Logout.module.css\";\n// import firebase from \"../../config/firebase\";\n\n// import { Redirect } from \"react-router-dom\";\n\nconst logout = props => {\n  // state = {\n  //   redirect: false\n  // };\n\n  // handleLogout = () => {\n  //   firebase\n  //     .auth()\n  //     .signOut()\n  //     .then(() => {\n  //       console.log(\"log out was sucessful\");\n  //       this.setState({ redirect: true });\n  //     })\n  //     .catch(error => console.log(\"error occured\"));\n  // };\n\n  // if (this.state.redirect) {\n  //   // console.log(this.props.history(\"/\"));\n  //   // this.props.history(\"/\");\n  //   return <Redirect to=\"/\" />;\n  // }\n  return (\n    <button onClick={props.Logout} className={classes.Button}>\n      Logout\n    </button>\n  );\n};\n\nexport default logout;\n","import React from \"react\";\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBModalFooter\n} from \"mdbreact\";\n\n// const popUpComponent = props => {\n//   console.log(\"progress is\", props.progress);\n//   return (\n//     <MDBContainer>\n//       {/* <MDBBtn>Modal</MDBBtn> */}\n//       <MDBModal isOpen={props.posting} toggle={props.handleToggle}>\n//         <MDBModalHeader>MDBModal title</MDBModalHeader>\n//         <MDBModalBody>\n//           <div>TESTING ITS WORKING </div>\n//           {/* {props.progress >= 100 ? (\n//             <div>\n//               <p>completed</p>\n//               <MDBBtn color=\"secondary\" onClick={props.reset}>\n//                 Submit Another\n//               </MDBBtn>\n//               <MDBBtn color=\"primary\" onClick={props.completed}>\n//                 Finished\n//               </MDBBtn>\n//             </div>\n//           ) : (\n//             <>\n//               <h3>Sending data...</h3>\n//               <progress\n//                 className=\"uploadProgress\"\n//                 value={props.progress}\n//                 max=\"1.0\"\n//               />\n//             </>\n//           )} */}\n//         </MDBModalBody>\n//       </MDBModal>\n//       {/* <MDBBtn>Modal</MDBBtn>\n//       <MDBModal>\n//         <MDBModalHeader>MDBModal title</MDBModalHeader>\n//         <MDBModalBody>(...)</MDBModalBody>\n//         <MDBModalFooter>\n//           <MDBBtn color=\"secondary\">Close</MDBBtn>\n//           <MDBBtn color=\"primary\">Save changes</MDBBtn>\n//         </MDBModalFooter>\n//       </MDBModal> */}\n//     </MDBContainer>\n//   );\n// };\n\nconst popUpComponent = props => {\n  console.log(\"props.posting\", props.progress);\n  return (\n    <MDBContainer>\n      <MDBModal isOpen={props.posting}>\n        <MDBBtn> Modal</MDBBtn>\n        <MDBModalHeader>MDBModal title</MDBModalHeader>\n        <MDBModalBody>\n          {props.progress >= 100 ? (\n            <div>\n              <p>completed</p>\n              {/* <MDBBtn color=\"secondary\" onClick={props.reset}>\n                Submit Another\n              </MDBBtn> */}\n              <MDBBtn color=\"primary\" onClick={props.completed}>\n                Finished\n              </MDBBtn>\n            </div>\n          ) : (\n            <>\n              <h3>Sending data...</h3>\n              <progress\n                className=\"uploadProgress\"\n                value={props.progress}\n                max=\"1.0\"\n              />\n            </>\n          )}\n        </MDBModalBody>\n        {/* <MDBModalFooter>\n          <MDBBtn color=\"secondary\">Close</MDBBtn>\n          <MDBBtn color=\"primary\">Save changes</MDBBtn>\n        </MDBModalFooter> */}\n      </MDBModal>\n    </MDBContainer>\n  );\n};\n\nexport default popUpComponent;\n{\n  /* <MDBModalFooter>\n          <MDBBtn color=\"secondary\">Close</MDBBtn>\n          <MDBBtn color=\"primary\">Save changes</MDBBtn>\n        </MDBModalFooter> */\n}\n","import React, { Component } from \"react\";\nimport axios from \"../../axios\";\nimport firebase from \"../../config/firebase\";\nimport classes from \"./Dashboard.module.css\";\nimport PopUpComponent from \"../../components/PopUpComponent/PopUpComponent\";\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nclass Dashboard extends Component {\n  state = {\n    // SubmissionForm: {\n    // file: {\n    //   value: \"\",\n    //   validation: {\n    //     type: \"image/png\"\n    //   },\n    //   valid: false,\n    //   touched: false,\n    //   type: \"file\",\n    //   lastPdfAddTime: \"\"\n    // }\n    file: null,\n    //},\n    url: null,\n    progress: 0,\n    // loading: false,\n    posting: false,\n    exDateInformation: null\n    // token: null\n  };\n\n  checkValdity(value, rules) {\n    console.log(\"the vlaue is\", value);\n    console.log(rules);\n    let isValid = true;\n    // if (rules.required) {\n    //   isValid = value.trim() !== \"\" && isValid;\n    // }\n    // if (rules.minLength) {\n    //   isValid = value.length > rules.minLength && isValid;\n    // }\n\n    if (rules.type) {\n      if (value !== undefined) isValid = value.type === rules.type && isValid;\n    }\n    // if (rules.minValue) {\n    //   isValid = value > rules.minValue && isValid;\n    // }\n    console.log(\"is valid is\", isValid);\n\n    return isValid;\n  }\n\n  completed = () => {\n    console.log(\"completed was triggere\");\n    this.setState({\n      file: undefined,\n      url: null,\n      progress: 0,\n      posting: false,\n      exDateInformation: null\n    });\n  };\n  // componentDidMount() {\n  //   // const token = firebase.auth().currentUser.getIdToken();\n  //   // this.setState({ token });\n  // }\n  handleChange = event => {\n    console.log(\"THE EVENT IS\", event.target.files[0]);\n    // const copyData = { ...this.state.SubmissionForm };\n    // console.log(copyData);\n    // const copyDataElement = { ...copyData[\"file\"] };\n\n    // copyDataElement.touched = true;\n    // copyDataElement.value = event.target.files[0];\n\n    // copyDataElement.valid = this.checkValdity(\n    //   copyDataElement.value,\n    //   copyDataElement.validation\n    // );\n    // copyData[\"file\"] = copyDataElement;\n\n    // console.log(\"file changed\", event.target.files[0]);\n    this.setState({ file: event.target.files[0] });\n  };\n\n  fetchTextFromGoogle = async url => {\n    let array = [];\n    // const { token } = this.state;\n    // const { url } = this.state;\n\n    console.log(\"the url is\", url);\n    let body = JSON.stringify({\n      requests: [\n        {\n          features: [\n            // { type: \"LABEL_DETECTION\", maxResults: 10 },\n            // { type: \"LANDMARK_DETECTION\", maxResults: 5 },\n            // { type: \"FACE_DETECTION\", maxResults: 5 },\n            // { type: \"LOGO_DETECTION\", maxResults: 5 },\n            { type: \"DOCUMENT_TEXT_DETECTION\" }\n            // { type: \"DOCUMENT_TEXT_DETECTION\", maxResults: 5 },\n            // { type: \"SAFE_SEARCH_DETECTION\", maxResults: 5 },\n            // { type: \"IMAGE_PROPERTIES\", maxResults: 5 },\n            // { type: \"CROP_HINTS\", maxResults: 5 },\n            // { type: \"WEB_DETECTION\", maxResults: 5 }\n          ],\n          image: {\n            source: {\n              imageUri: url\n            }\n          }\n        }\n      ]\n    });\n    const key = process.env.REACT_APP_API_KEY;\n    let response = await fetch(\n      \"https://vision.googleapis.com/v1/images:annotate?key=\" + key,\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: body\n      }\n    );\n\n    let responseJson = await response.json();\n    console.log(responseJson);\n\n    console.log(responseJson.responses[0].fullTextAnnotation.text);\n\n    array = responseJson.responses[0].fullTextAnnotation.text.split(\"\\n\");\n\n    const startIndex = Object.values(array).indexOf(\"INVITATION\") + 1;\n    const myObject = {};\n\n    const dateArray = array[startIndex].split(\" \");\n    let finalDateArray = [];\n    for (let i = 0; i < dateArray.length; i++) {\n      if (dateArray[i] === \"PM\") {\n        finalDateArray.push(dateArray[i]);\n        break;\n      }\n      finalDateArray.push(dateArray[i]);\n    }\n\n    let monthNumber = months.indexOf(finalDateArray[0]) + 1;\n    const dayOfRaid = finalDateArray[1];\n    const currentYear = new Date().getFullYear();\n    let date = monthNumber + \"/\" + dayOfRaid + \"/\" + currentYear;\n\n    let time = finalDateArray[2] + \":00 \" + finalDateArray[3];\n    console.log(finalDateArray);\n\n    const gymName = array[startIndex + 1];\n    const city = array[startIndex + 2].split(\",\")[0];\n    console.log(\"the gym name is\", city);\n\n    myObject.date = date;\n    myObject.time = time;\n    myObject.gymName = gymName;\n    myObject.city = city;\n    myObject.imageUrl = url;\n\n    // const token = await firebase.auth().currentUser.getIdToken;\n\n    firebase\n      .auth()\n      .currentUser.getIdToken(true)\n      .then(idToken => {\n        axios\n          .patch(\"/currentExRaids.json?auth=\" + idToken, {\n            [myObject.gymName]: myObject\n          })\n          .then(response => console.log(response));\n      })\n      .catch(error => console.log(\"Error :: \" & error.message));\n    this.setState({\n      exDateInformation: myObject\n    });\n    // axios\n    //   .post(\n    //     \"/currentExRaids.json?auth=\" + token,\n    //     { [myObject.gymName]: myObject }\n    //     // {\n    //     //   headers: {\n    //     //     Authorization: token\n    //     //   }\n    //     //}\n    //   )\n    //   // {\n    //   //   headers: {\n    //   //     Authorization: token,\n    //   //     \"Content-Type\": \"application/json\"\n    //   //   }\n    //   // }\n    //   //  )\n    //   .then(response => console.log(response))\n    //   .catch(error => console.log(error.response));\n  };\n  handleClick = () => {\n    console.log(\"submit was triggered \");\n    this.setState({ loading: true });\n    const { file } = this.state;\n    if (file) {\n      // this.setState({ posting: true });\n      console.log(\"inside if \");\n      const storage = firebase.storage();\n      const upLoadTask = storage.ref(`${file.name}`).put(file);\n      upLoadTask.on(\n        \"state_changed\",\n        snapshot => {\n          // progress function ...\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          this.setState({ progress, posting: true });\n        },\n        error => {\n          // Error function ...\n          console.log(error);\n        },\n        () => {\n          storage\n            .ref(\"\")\n            .child(`${file.name}`)\n            .getDownloadURL()\n            .then(url => {\n              this.setState({ url });\n              this.fetchTextFromGoogle(url);\n            })\n            .catch(error => console.log(error));\n        }\n\n        // () => {\n        //   this.fetchTextFromGoogle();\n        // }\n      );\n    }\n    // } else {\n    //   alert(\"no file please select a png\");\n    // }\n  };\n  render() {\n    let loadModule = null;\n    if (this.state.posting) {\n      loadModule = (\n        <PopUpComponent\n          posting={this.state.posting}\n          progress={this.state.progress}\n          completed={this.completed}\n          // completed={this.handleCompletion}\n          // reset={this.handleNewSubmission}\n          // handleToggle={this.handleNewSubmission}\n        />\n      );\n    }\n\n    // console.log(\"the current user is\", firebase.auth().currentUser);\n    return (\n      // <div>\n      <div className={classes.Dashboard}>\n        <h3 className={classes.Header}>Submit an Ex Pass</h3>\n        <input\n          type=\"file\"\n          onChange={e => this.handleChange(e)}\n          accept=\"image/jpeg, image/png\"\n          className={classes.Input}\n        />\n\n        {/* let loadModule = <PopUpComponent />;{} */}\n        <button onClick={this.handleClick} className={classes.Button}>\n          Submit\n        </button>\n        {loadModule}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Logout from \"../../container/Logout/Logout\";\nimport { NavLink } from \"react-router-dom\";\nimport Dashboard from \"../../container/Dashboard/Dashboard\";\nimport NotAdmin from \"../NotAdminComponent/NotAdminComponent\";\n\nimport classes from \"./Navbar.module.css\";\nconst navbar = props => {\n  console.log(\"props.authenticated is\", props.isAdmin);\n  const isAdmin =\n    props.isAdmin && props.authenticated ? (\n      <NavLink to=\"/dashboard\" className={classes.NavLink}>\n        Dashboard\n      </NavLink>\n    ) : null;\n\n  // <NavLink to=\"/dashboard\">\n  //   <NotAdmin />\n  // </NavLink>\n  {\n    /* <Logout /> */\n  }\n\n  const logout = props.authenticated ? (\n    <Logout Logout={props.Logout} />\n  ) : (\n    <NavLink to=\"/login\" className={classes.NavLink}>\n      Login\n    </NavLink>\n  );\n\n  // const logout = props.authenticated ? (\n  //   <>\n  //     <NavLink to=\"/logout\">\n  //       <Logout />\n  //     </NavLink>\n  //   </>\n  // ) : null;\n\n  // console.log(\"AUTHENTICATED IS\", authenticated);\n  return (\n    // <Navbar bg=\"light\" expand=\"lg\">\n    //   <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n    //   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    //   <Navbar.Collapse id=\"basic-navbar-nav\">\n    //     <Nav className=\"mr-auto\">\n    //       <NavLink to=\"/\">Home</NavLink>\n    //       {authenticated}\n\n    // </Navbar>\n\n    //   <Navbar bg=\"light\">\n    //   <Navbar.Brand href=\"#home\">Brand link</Navbar.Brand>\n    // </Navbar>\n\n    // <Navbar bg=\"light\">\n    //   <Navbar.Brand>Brand text</Navbar.Brand>\n    // </Navbar>\n\n    // <Navbar bg=\"dark\">\n\n    // </Navbar>\n    // <br />\n    <Navbar\n      collapseOnSelect\n      expand=\"md\"\n      variant=\"dark\"\n      className={classes.Navbar}\n    >\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        {/* <Navbar bg=\"dark\" variant=\"dark\"> */}\n        <Nav className={classes.Nav}>\n          <NavLink to=\"/\" className={classes.NavLink}>\n            Home\n          </NavLink>\n          {isAdmin}\n        </Nav>\n\n        {/* <Navbar.Brand href=\"#home\">\n        <img\n          alt=\"\"\n          src=\"/logo.svg\"\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />\n        React Bootstrap\n      </Navbar.Brand> */}\n      </Navbar.Collapse>\n      {logout}\n    </Navbar>\n  );\n};\n\nexport default navbar;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  authenticated,\n  loggedin,\n  type,\n  ...rest\n}) => {\n  console.log(\"TYPE IS\", type);\n  // console.log(\"LOGGED IN IS\", loggedin);\n\n  switch (type) {\n    case \"authenticated\":\n      return (\n        <Route\n          render={props =>\n            authenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n          }\n          {...rest}\n        />\n      );\n\n    case \"signed in\":\n      return (\n        <Route\n          render={props =>\n            loggedin ? <Redirect to=\"/\" /> : <Component {...props} />\n          }\n          {...rest}\n        />\n      );\n  }\n};\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./container/Home/Home\";\nimport Login from \"./container/Login/Login\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport firebase from \"./config/firebase\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport DashBoard from \"./container/Dashboard/Dashboard\";\nimport axios from \"./axios\";\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\n\n// console.log(\"testing\", API_KEY);\n\nclass App extends Component {\n  state = {\n    authenticated: false,\n    user: null,\n    // uid: null,\n    isAdmin: false\n  };\n\n  //   firebase.auth().onAuthStateChanged((user) =>{\n  //     if (user) {\n  //         console.log('This is the user: ', user)\n  //     } else {\n  //         // No user is signed in.\n  //         console.log('There is no logged in user');\n  //     }\n  // })\n\n  Logout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        console.log(\"log out was sucessful\");\n        this.setState({\n          authenticated: false,\n          user: null,\n          isAdmin: false,\n          loggedin: false\n        });\n      });\n    //     .catch(error => console.log(\"error occured\"));\n  };\n\n  updateUser = user => {\n    if (!user) {\n      this.setState({ authenticated: false, user: null, uid: null });\n    }\n  };\n\n  componentDidMount() {\n    // const user = firebase.auth().currentUser;\n    // if (user) {\n    //   user.getIdToken(true).then(idToken => {\n    //     axios\n    //       .get(\"/users.json?auth=\" + idToken)\n    //       .then(response => console.log(response))\n    //       .catch(error => console.log(error));\n    //   });\n    //}\n    // console.log(\"the database is\", database);\n    firebase.auth().onAuthStateChanged(user => {\n      user\n        .getIdToken(true)\n        .then(idToken => {\n          axios\n            .get(\"/users/\" + user.uid + \".json\", {\n              params: {\n                auth: idToken\n              }\n            })\n            .then(response =>\n              // console.log(\"the response is\", response))\n              this.setState({ isAdmin: response.data.isAdmin })\n            )\n            .catch(error => console.log(error));\n          user\n            ? this.setState({\n                authenticated: true,\n                user: user,\n                loggedin: true,\n                // uid: user.uid,\n                token: idToken\n              })\n            : this.setState({\n                authenticated: false,\n                user: null,\n                loggedin: false,\n                token: null\n              });\n        })\n        .catch(error => console.log(error));\n\n      console.log(\"the user is, \", user);\n    });\n\n    //   axios\n    //     .get(\"/users.json?auth=\" + user.refreshToken)\n    //     .then(response => console.log(response))\n    //     .catch(error => console.log(error));\n    //   console.log(\"user is\", user.uid);\n    //});\n  }\n  render() {\n    console.log(this.state);\n    // const user = firebase.auth().currentUser;\n    // if (user) {\n    //   console.log(user.providerData);\n    // }\n    // console.log(\"this\", this);\n    // let logout = null;\n    // const { user } = this.state;\n    // if (user) {\n    //   logout = <Logout />;\n    // }\n    return (\n      <div className=\"App\">\n        <Navbar\n          isAdmin={this.state.isAdmin}\n          authenticated={this.state.authenticated}\n          Logout={this.Logout}\n        />\n\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => <Home user={this.updateUser} {...props} />}\n          />\n\n          {/* <Route path=\"/login\" component={Login} /> */}\n          <ProtectedRoute\n            authenticated={this.state.authenticated}\n            component={DashBoard}\n            path=\"/dashboard\"\n            type=\"authenticated\"\n          />\n\n          <ProtectedRoute\n            loggedin={this.state.loggedin}\n            component={Login}\n            path=\"/login\"\n            type=\"signed in\"\n          />\n        </Switch>\n\n        {/* <Switch>\n        <Route path=\"/ \"> */}\n        {/* <Home /> */}\n        {/* </Route> */}\n        {/* <Route path=\"/login \" component={} /> */}\n        {/* // </Switch> */}\n\n        {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2ZMeK\",\"Invalid\":\"Input_Invalid__1NrbT\",\"Radio\":\"Input_Radio__2dxwx\",\"Label\":\"Input_Label__2XMBp\",\"Layout\":\"Input_Layout__1qQoX\",\"Span\":\"Input_Span__eEeyf\",\"TextArea\":\"Input_TextArea__2VAwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Navbar_Nav__1yypr\",\"Navbar\":\"Navbar_Navbar__1IxrI\",\"NavLink\":\"Navbar_NavLink__1mcmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__2K9_i\",\"Header\":\"Dashboard_Header__2C9bs\",\"Input\":\"Dashboard_Input__LExej\",\"Button\":\"Dashboard_Button__35hjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Dropdown_Label__24bHZ\",\"Layout\":\"Dropdown_Layout__308R6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Home_Image__3qr_q\",\"Header\":\"Home_Header__1POqZ\",\"Dropdown\":\"Home_Dropdown__36mjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3_oTD\",\"Header\":\"Login_Header__2xD8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__3XkVO\",\"Dropdown\":\"Form_Dropdown__2VHlA\",\"Button\":\"Form_Button__1Vl9M\"};","module.exports = __webpack_public_path__ + \"static/media/myphoto.e1e4d019.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Logout_Button__HIS7O\"};"],"sourceRoot":""}